name: setup-kind

on:
  workflow_dispatch:
  
defaults:
  run:
    shell: bash
    working-directory: ./

concurrency:
  group: test-github-action${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  test-github-action:
    name: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Keep running if one leg fails.
      matrix:
        k8s-version:
        - 1.25.x
        - 1.26.x
        - 1.27.x
        - 1.28.x
        - 1.29.x
        - 1.30.x

        # See https://github.com/chainguard-dev/actions/pull/175
        # We're testing whether setting a custom cluster domain works
        cluster-suffix:
        - cluster.local # default value
        - potato.local

        include: 
        - k8s-version: 1.25.x
          knative-version: 1.11.0          
        - k8s-version: 1.26.x
          knative-version: 1.12.0
        - k8s-version: 1.27.x
          knative-version: 1.13.0
        - k8s-version: 1.28.x
          knative-version: 1.13.0
        - k8s-version: 1.29.x
          knative-version: 1.13.0
        - k8s-version: 1.30.x
          knative-version: 1.13.0

    steps:
    - uses: step-security/harden-runner@v2
      with:
        egress-policy: audit
        allowed-endpoints: >
          9236a389bd48b984df91adc1bc924620.r2.cloudflarestorage.com:443
          api.github.com:443
          auth.docker.io:443
          cdn03.quay.io:443
          cgr.dev:443
          gcr.io:443
          github.com:443
          mirror.gcr.io:443
          objects.githubusercontent.com:443
          packages.wolfi.dev:443
          production.cloudflare.docker.com:443
          quay.io:443
          raw.githubusercontent.com:443
          registry-1.docker.io:443
          storage.googleapis.com:443
    
    
    - name: Remove DNS servers from Docker daemon.json and restart Docker
      run: |
        echo "Modifying /etc/docker/daemon.json to remove DNS servers..."
        
        # Check if the daemon.json file exists
        if [ -f /etc/docker/daemon.json ]; then
          # Remove the DNS entry from the file
          sudo jq 'del(.dns)' /etc/docker/daemon.json | sudo tee /etc/docker/daemon.json.tmp > /dev/null
          
          # Move the modified file back to the original location
          sudo mv /etc/docker/daemon.json.tmp /etc/docker/daemon.json
    
          echo "DNS servers removed from /etc/docker/daemon.json."
          cat /etc/docker/daemon.json
        else
          echo "File /etc/docker/daemon.json does not exist. Skipping modification."
        fi
        
        # Restart Docker to apply changes
        echo "Restarting Docker service..."
        sudo systemctl restart docker
        echo "Docker service restarted."

    - name: Update Netplan Configuration File Using sed
      run: |
        echo "Updating Netplan Configuration File with sed..."
        # Disable interface DNS
        sudo sed -i '/route-metric: 100/a\        use-dns: false' /etc/netplan/50-cloud-init.yaml
        # Add custom DNS servers
        sudo sed -i '/set-name: "eth0"/a\      nameservers:\n        addresses: [127.0.0.1,172.17.0.1]' /etc/netplan/50-cloud-init.yaml
        echo "Updated Netplan Configuration File:"
        sudo cat /etc/netplan/50-cloud-init.yaml
        # Apply netplan changes
        sudo netplan apply

    - name: Print Netplan Configuration Files
      run: |
        echo "Netplan Configuration Files:"
        for file in /etc/netplan/*.yaml; do
          echo "File: $file"
          sudo cat "$file"
        done

    - name: Disable Stub Resolver, Set Custom DNS Servers, and Remove Existing Nameservers
      run: |
        echo "Disabling Stub Resolver, Setting Custom DNS Servers, and Removing Existing Nameservers..."
        # Disable DNSStubListener
        sudo sed -i 's/^#DNSStubListener=.*/DNSStubListener=no/' /etc/systemd/resolved.conf
        if ! grep -q '^DNSStubListener=' /etc/systemd/resolved.conf; then
          echo 'DNSStubListener=no' | sudo tee -a /etc/systemd/resolved.conf
        fi
        
        # Remove any existing nameservers
        sudo sed -i '/^DNS=/d' /etc/systemd/resolved.conf
        
        # Add custom DNS servers
        #echo 'DNS=127.0.0.1 172.17.0.1' | sudo tee -a /etc/systemd/resolved.conf
        
        # Restart systemd-resolved to apply changes
        sudo systemctl restart systemd-resolved
        
        # Update /etc/resolv.conf symbolic link
        sudo rm /etc/resolv.conf
        sudo ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf
        
        # Verify the changes
        echo "Current /etc/resolv.conf:"
        cat /etc/resolv.conf
        
        echo "systemd-resolved status:"
        systemctl status systemd-resolved
        sudo systemctl restart docker   
    - run: cat /run/systemd/resolve/resolv.conf
    - name: setup-kind
      uses: chainguard-dev/actions/setup-kind@main
      with:
        k8s-version: ${{ matrix.k8s-version }}
        cluster-suffix: ${{ matrix.cluster-suffix }}

    
    - name: Test spinning up Knative
      if: ${{ steps.changed-kind.outputs.any_changed == 'true' }}
      uses: chainguard-dev/actions/setup-knative@main
      with:
        version: ${{ matrix.knative-version || 'latest' }}

    - run: sudo iptables -L -v -n
      if: ${{ always() }}
    
    - name: Collect diagnostics
      if: ${{ failure() }}
      uses: chainguard-dev/actions/kind-diag@main
      with:
        artifact-name: logs.${{ matrix.k8s-version }}
